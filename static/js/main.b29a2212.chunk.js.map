{"version":3,"sources":["Components/Header/Search/search.module.css","Components/Content/Form/Input/input.module.css","store/searchReducer.js","Components/Header/Search/Search.jsx","store/listReducer.js","Components/Header/CreateNewItemButton/CreateNewItemButton.jsx","Components/Header/Header.jsx","Components/Content/Form/Input/Input.jsx","helpers/getContent.js","helpers/utc.js","Components/Content/Form/Form.jsx","helpers/getUniquId.js","Components/Content/Form/AddItemForm.jsx","Components/Content/EditItemButton/EditItemButton.jsx","Components/Content/CompleteButtons/CompleteButtons.jsx","Components/Content/style/style.js","Components/Content/ListItem.jsx/ListItem.jsx","Components/Content/List.jsx","helpers/filterElements.js","Components/Content/Content.jsx","store/index.js","App.js","index.js"],"names":["module","exports","searchSlice","createSlice","name","initialState","matching","matchingArray","reducers","setMatching","state","action","payload","toLowerCase","actions","Search","useState","change","setChange","dispatch","useDispatch","handleChange","useCallback","e","target","value","className","styles","search","input","id","type","onChange","placeholder","autoFocus","style","background","listSlice","selected","list","date","content","completed","addListItem","push","setSelected","canceledIndex","indexOf","splice","setCompleted","newList","current","map","item","sort","a","b","deleteListItem","i","find","el","length","changeListItem","console","log","changedList","utc","CreateNewItemButton","useContext","mainContext","setShowInput","showInput","toggleShowInput","ListItemIcon","onClick","color","fontSize","Header","classes","useSelector","handleDelete","ListItem","header","Input","submit","textarea","onBlur","maxLength","getContent","Date","toJSON","slice","replace","split","reverse","join","Form","setCurrentId","handleSubmit","prevValue","formik","useFormik","initialValues","text","onSubmit","values","form","getUniqueId","itemsList","String","Math","floor","random","idArray","getIdArr","some","AddItemForm","hanldeClose","Button","variant","height","marginLeft","EditItemButton","handleClick","CompleteButtons","taskState","setTaskState","useEffect","useStyles","makeStyles","theme","root","width","marginRight","backgroundColor","palette","paper","borderBottom","marginTop","paddingTop","display","justifyContent","padding","Item","labelId","React","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemText","primary","ToDoList","allElements","searchMatching","currentId","List","role","undefined","dense","button","filter","element","matchContent","includes","matchDate","createContext","Content","Provider","rootReducer","combineReducers","listReducer","searchReducer","store","configureStore","reducer","window","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b29a2212.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"search_input__QJzhT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"input_box__2qeqR\",\"textarea\":\"input_textarea__3jNF0\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst searchSlice = createSlice({\r\n  name: \"search\",\r\n  initialState: {\r\n    matching: null,\r\n    matchingArray: [],\r\n  },\r\n  reducers: {\r\n    setMatching(state, action) {\r\n      state.matching =\r\n        typeof action.payload === \"string\"\r\n          ? action.payload.toLowerCase()\r\n          : action.payload;\r\n    },\r\n  },\r\n});\r\nexport const { setMatching } = searchSlice.actions;\r\n\r\nexport default searchSlice.reducer;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useCallback,  useState } from \"react\";\r\nimport {setMatching} from \"../../../store/searchReducer\";\r\nimport styles from \"./search.module.css\";\r\n\r\nconst Search = () => {\r\n  const [change, setChange] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = useCallback((e) => {\r\n      dispatch(setMatching(e.target.value));\r\n      setChange(true);\r\n      e.target.value === \"\" && setChange(false);\r\n    },[dispatch]\r\n  );\r\n \r\n  return (\r\n    <>\r\n      <div className={styles.search}>\r\n        <input\r\n          className={styles.input}\r\n          id=\"text\"\r\n          name=\"text\"\r\n          type=\"text\"\r\n          onChange={(e) => handleChange(e)}\r\n          placeholder=\"Search\"\r\n          autoFocus\r\n          style={{ background: change && \"white\" }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { createSlice, current } from \"@reduxjs/toolkit\";\r\n\r\nconst listSlice = createSlice({\r\n  name: \"list\",\r\n  initialState: {\r\n    selected: [],\r\n    list: [\r\n      {\r\n        date: \"16.09.2021\",\r\n        content: \"Call 0962783838 and order books\",\r\n        id: \"1\",\r\n        completed: true\r\n      },\r\n      {\r\n        date: \"17.09.2021\",\r\n        content:\r\n          \"buy food\",\r\n        id: \"2\",\r\n        completed: false\r\n      },\r\n      {\r\n        date: \"17.09.2021\",\r\n        content:\r\n          \"Сlean the room\",\r\n        id: \"3\",\r\n        completed: false\r\n      },\r\n    ],\r\n  },\r\n  reducers: {\r\n    addListItem(state, action) {\r\n      state.list.push({...action.payload, completed: false});\r\n    },\r\n    setSelected(state, action) {\r\n      const canceledIndex = state.selected.indexOf(action.payload);\r\n\r\n      action.payload === null\r\n        ? (state.selected = [])\r\n        : canceledIndex === -1\r\n        ? state.selected.push(action.payload)\r\n        : state.selected.splice(canceledIndex, 1);\r\n    },\r\n    setCompleted(state, action) {\r\n      \r\n      const newList = current(state).list.map(item=>{\r\n        const id = action.payload.id\r\n        const  complete = ()=> item.completed? false: true\r\n        return item.id ===id? {...item, completed: complete(), date: action.payload.date}: item\r\n      })\r\n\r\n      newList.sort(function(a,b){\r\n        if(a.completed < b.completed) return 1\r\n        if(a.completed > b.completed) return -1\r\n        return 0\r\n      })\r\n  \r\n      state.list = newList;\r\n    },\r\n\r\n    deleteListItem(state) {\r\n      const newList = [];\r\n\r\n      for (let i = 0; i < state.list.length; i++) {\r\n        const id = state.selected.find((el) => state.list[i].id === el);\r\n\r\n        state.list[i].id !== id && newList.push(current(state.list[i]));\r\n      }\r\n\r\n      state.list = newList;\r\n    },\r\n\r\n    changeListItem(state, action) {\r\n      console.log(action.payload);\r\n      const changedList = state.list.map((el) =>\r\n        el.id === action.payload.id\r\n          ? { ...el, date: action.payload.utc, content: action.payload.content }\r\n          : el\r\n      );\r\n      state.list = changedList;\r\n    },\r\n  },\r\n});\r\n\r\nexport default listSlice.reducer;\r\nexport const { addListItem, deleteListItem, changeListItem, setSelected, setCompleted } =\r\n  listSlice.actions;\r\n","import ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport { useContext, useCallback } from \"react\";\r\nimport { mainContext } from \"../../Content/Content\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nexport default function CreateNewItemButton() {\r\n  const { setShowInput, showInput } = useContext(mainContext);\r\n  const toggleShowInput = useCallback(()=> {\r\n    !showInput&& setShowInput(true)\r\n   },[showInput, setShowInput])\r\n  \r\n   return (\r\n    <ListItemIcon>\r\n      <span onClick={toggleShowInput} style={{ color: \"White\", fontSize: '1rem' }}>\r\n          {!showInput? <AddIcon />: null}\r\n      </span>\r\n    </ListItemIcon>\r\n  );\r\n}\r\n","import { useCallback } from \"react\";\r\nimport Search from \"./Search/Search\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport { deleteListItem, setSelected } from \"../../store/listReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CreateNewItemButton from \"./CreateNewItemButton/CreateNewItemButton\";\r\n\r\nexport default function Header({ classes }) {\r\n  \r\n  const dispatch = useDispatch();\r\n  const { selected } = useSelector((state) => state.list);\r\n \r\n  const handleDelete = useCallback(() => {\r\n    dispatch(deleteListItem());\r\n    dispatch(setSelected(null));\r\n  }, [dispatch]);\r\n  \r\n  return (\r\n    <>\r\n      <ListItem className={classes.header}>\r\n        <ListItemIcon style={{ color: \"White\" }}>\r\n          {selected.length > 0 && (\r\n            <>\r\n              <DeleteSharpIcon color={\"secondary\"} onClick={handleDelete} />\r\n            </>\r\n          )}\r\n        </ListItemIcon>\r\n        <ListItemIcon>\r\n          <Search />\r\n        </ListItemIcon>\r\n        <CreateNewItemButton />\r\n      </ListItem>\r\n    </>\r\n  );\r\n}\r\n","import styles from './input.module.css'\r\n\r\nexport default function Input({ handleChange, submit, value }) {\r\n  return (\r\n    <textarea className={styles.textarea}\r\n      id=\"text\"\r\n      name=\"text\"\r\n      onChange={handleChange}\r\n      onBlur={submit}\r\n      autoFocus\r\n      maxLength=\"100\"\r\n      value={value}\r\n    ></textarea>\r\n  );\r\n}\r\n","export const getContent = (id, list) => {\r\n   const matching = list.find((el) => el.id === id );\r\n   return matching.content\r\n  };\r\n","export const utc = new Date()\r\n  .toJSON()\r\n  .slice(0, 10)\r\n  .replace(/-/g, \".\")\r\n  .split(\".\")\r\n  .reverse()\r\n  .join(\".\");\r\n","import { useCallback, useContext } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { changeListItem } from \"../../../store/listReducer\";\r\nimport Input from \"./Input/Input\";\r\nimport styles from \"./form.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getContent } from \"../../../helpers/getContent\";\r\nimport { utc } from \"../../../helpers/utc\";\r\nimport { mainContext } from \"../Content\";\r\n\r\nexport default function Form({ id }) {\r\n  const { list } = useSelector((state) => state.list);\r\n  const dispatch = useDispatch();\r\n\r\n  const { setCurrentId } = useContext(mainContext);\r\n\r\n  const handleSubmit = useCallback(\r\n    (value, prevValue) => {\r\n      if (value !== prevValue)\r\n        dispatch(changeListItem({ utc, id, content: value }));\r\n      setCurrentId(null);\r\n    },\r\n    [id, dispatch, setCurrentId]\r\n  );\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      text: getContent(id, list),\r\n    },\r\n    onSubmit: (values) => {\r\n      const prevValue = getContent(id, list);\r\n      handleSubmit(values.text, prevValue);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit} className={styles.form}>\r\n      <Input\r\n        handleChange={formik.handleChange}\r\n        submit={formik.handleSubmit}\r\n        id={id}\r\n        value={formik.values.text}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","const getIdArr = (itemsList) => {\r\n  return itemsList.map((item) => item.id);\r\n};\r\n\r\nexport const getUniqueId = (itemsList) => {\r\n  let id = String(Math.floor(Math.random() * 200));\r\n  const idArray = getIdArr(itemsList);\r\n\r\n  if (idArray.some((el) => el === id)) {\r\n    getUniqueId(itemsList);\r\n  } else {\r\n    return id;\r\n  }\r\n};\r\n","import React, { useContext, useCallback } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { getUniqueId } from \"../../../helpers/getUniquId\";\r\nimport { addListItem } from \"../../../store/listReducer\";\r\nimport { utc } from \"../../../helpers/utc\";\r\nimport Input from \"./Input/Input\";\r\nimport { mainContext } from \"../Content\";\r\nimport styles from \"./form.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nexport default function AddItemForm() {\r\n  const dispatch = useDispatch();\r\n  const { setShowInput, list } = useContext(mainContext);\r\n\r\n  const hanldeClose = useCallback(() => {\r\n    setShowInput(false);\r\n  }, [setShowInput]);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      text: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      dispatch(\r\n        addListItem({ id: getUniqueId(list), content: values.text, date: utc })\r\n      );\r\n      setShowInput(false);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit} className={styles.form}>\r\n        <Input handleChange={formik.handleChange} />\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          color=\"secondary\"\r\n          style={{ height: \"2rem\" }}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          type=\"click\"\r\n          onClick={hanldeClose}\r\n          style={{\r\n            color: \"white\",\r\n            background: \"black\",\r\n            marginLeft: \"0.4rem\",\r\n            height: \"2rem\",\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { useContext, useCallback } from \"react\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { mainContext } from \"../Content\";\r\n\r\nexport default function EditItemButton({ id }) {\r\n  const { setCurrentId, setShowInput } = useContext(mainContext);\r\n\r\n  const handleClick = useCallback(() => {\r\n    setShowInput(false);\r\n    setCurrentId(id);\r\n  }, [setShowInput, id, setCurrentId]);\r\n\r\n  return (\r\n    <div>\r\n      <ListItemIcon>\r\n        <EditIcon onClick={handleClick} />\r\n      </ListItemIcon>\r\n    </div>\r\n  );\r\n}\r\n","import RadioButtonUncheckedOutlinedIcon from \"@mui/icons-material/RadioButtonUncheckedOutlined\";\r\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCompleted } from \"../../../store/listReducer\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { utc } from \"../../../helpers/utc\";\r\n\r\nexport default function CompleteButtons({ completed, id }) {\r\n  const dispatch = useDispatch();\r\n  const [taskState, setTaskState] = useState(false);\r\n\r\n  useEffect(() => {\r\n    taskState && dispatch(setCompleted({ id, date: utc }));\r\n    setTaskState(false);\r\n  }, [taskState, dispatch, id]);\r\n  \r\n  return (\r\n    <ListItemIcon onClick={() => setTaskState(true)}>\r\n      {completed ? (\r\n        <CheckCircleIcon color={\"success\"} />\r\n      ) : (\r\n        <RadioButtonUncheckedOutlinedIcon />\r\n      )}\r\n    </ListItemIcon>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"70%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    backgroundColor: theme.palette.background.paper,\r\n\r\n    borderBottom: \"none\",\r\n    marginTop: \"0\",\r\n    paddingTop: \"0\",\r\n  },\r\n\r\n  item: {\r\n    borderBottom: \"1px solid gray\",\r\n    marginTop: \"0\",\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    background: \"black\",\r\n    color: \"White\",\r\n  },\r\n  content: {\r\n    padding: \"0.6rem\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { setSelected } from \"../../../store/listReducer\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport EditItemButton from \"../EditItemButton/EditItemButton\";\r\nimport CompleteButtons from \"../CompleteButtons/CompleteButtons\";\r\nimport { useStyles } from \"../style/style\";\r\n\r\nexport default function Item({ value, labelId }) {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const handleChange = React.useCallback(\r\n    (id) => {\r\n      dispatch(setSelected(id));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ListItemIcon>\r\n        <Checkbox\r\n          edge=\"start\"\r\n          tabIndex={-1}\r\n          disableRipple\r\n          inputProps={{ \"aria-labelledby\": labelId }}\r\n          onChange={() => {\r\n            handleChange(value.id);\r\n          }}\r\n        />\r\n      </ListItemIcon>\r\n      <EditItemButton id={value.id} />\r\n\r\n      <CompleteButtons completed={value.completed} id={value.id} />\r\n\r\n      <ListItemText\r\n        id={labelId}\r\n        primary={value.content}\r\n        className={classes.content}\r\n      />\r\n\r\n      <ListItemIcon> {value.date} </ListItemIcon>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { filterElementsArray } from \"../../helpers/filterElements\";\r\nimport Header from \"../Header/Header\";\r\nimport ChangeItemForm from \"./Form/Form\";\r\nimport { mainContext } from \"./Content\";\r\nimport { useContext } from \"react\";\r\nimport AddItemForm from \"./Form/AddItemForm\";\r\nimport Item from \"./ListItem.jsx/ListItem\";\r\nimport { useStyles } from \"./style/style\";\r\n\r\nexport default function ToDoList({ list }) {\r\n  const classes = useStyles();\r\n  const { matching } = useSelector((state) => state.search);\r\n  const { currentId, showInput } = useContext(mainContext);\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <Header classes={classes} />\r\n      {showInput && (\r\n        <ListItem\r\n          key=\"0\"\r\n          role={undefined}\r\n          dense\r\n          button\r\n          className={classes.item}\r\n        >\r\n          <AddItemForm />\r\n        </ListItem>\r\n      )}\r\n      {filterElementsArray(list, matching)\r\n        .map((value) => {\r\n          const labelId = `checkbox-list-label-${value.id}`;\r\n\r\n          return (\r\n            <ListItem\r\n              key={value.id}\r\n              role={undefined}\r\n              dense\r\n              button\r\n              className={classes.item}\r\n            >\r\n              {currentId === value.id ? (\r\n                <ChangeItemForm id={value.id} />\r\n              ) : (\r\n                <Item value={value} labelId={labelId} />\r\n              )}\r\n            </ListItem>\r\n          );\r\n        })\r\n        .reverse()}\r\n    </List>\r\n  );\r\n}\r\n","export const filterElementsArray = (allElements, searchMatching) => {\r\n  const filterElements = allElements.filter((element) => {\r\n    const matchContent =\r\n      element.content && element.content.toLowerCase().includes(searchMatching);\r\n    const matchDate =\r\n      element.date && element.date.toLowerCase().includes(searchMatching);\r\n\r\n    return !searchMatching ? allElements : matchContent | matchDate && element;\r\n  });\r\n  return filterElements;\r\n};\r\n","import List from \"./List\"\r\nimport { useState} from \"react\";\r\nimport {useSelector } from 'react-redux'\r\nimport { createContext } from \"react\";\r\n\r\nexport const  mainContext =  createContext()\r\n\r\nexport default function Content() {\r\n  \r\n  const {list} = useSelector(state=> state.list)\r\n  const [ showInput, setShowInput] = useState(false)\r\n  const [currentId, setCurrentId] = useState(null);\r\n\r\n  return (\r\n    <mainContext.Provider value ={{ showInput, setShowInput, currentId, setCurrentId, list}}>\r\n    <div>\r\n      <List list={list}/>\r\n    </div>\r\n    </mainContext.Provider>\r\n  );\r\n}\r\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport listReducer from \"./listReducer\";\r\nimport searchReducer from \"./searchReducer\";\r\nconst rootReducer = combineReducers({\r\n  list: listReducer,\r\n  search: searchReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nwindow.store = store;\r\nexport default store;\r\n","import Content from \"./Components/Content/Content\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div>\n        <Content />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}